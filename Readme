Here‚Äôs a complete `README.md` tailored for your project **Algo**, explaining both frontend and backend, and how to run it with **Docker**:

---

```markdown
# üß† AlgoJudge ‚Äì Online Coding Platform

AlgoJudge is a full-stack online judge platform built with the MERN stack, supporting:

- üë®‚Äçüíª Problem solving and code submissions
- üìä Leaderboard and submission history
- üß™ Custom test case execution
- üõ†Ô∏è Admin dashboard (problem/testcase management)
- ü§ñ AI-Powered Code Review (via Gemini)

---

## üèóÔ∏è Tech Stack

| Layer        | Tech Used              |
|--------------|------------------------|
| Frontend     | React + Tailwind + Vite|
| Backend      | Express + MongoDB      |
| AI Review    | Google Gemini API      |
| DevOps       | Docker + Docker Compose|

---

## üìÅ Project Structure

```

Algo/
‚îú‚îÄ‚îÄ Backend/            # Node.js Express API
‚îú‚îÄ‚îÄ frontend/           # React frontend (Vite)
‚îú‚îÄ‚îÄ docker-compose.yml
‚îú‚îÄ‚îÄ README.md
‚îî‚îÄ‚îÄ .env files

````

---

## üê≥ Docker Setup

> Make sure you have **Docker** installed on your system.  
> [Download Docker](https://docs.docker.com/get-docker/)

### 1. Clone the repo

```bash
git clone https://github.com/your-username/Algo.git
cd Algo
````

### 2. Set up environment variables

* Create a `.env` file inside the `Backend` folder:

```env
PORT=5000
MONGO_URI=mongodb://mongo:27017/algo
JWT_SECRET=your_jwt_secret
GEMINI_API_KEY=your_google_gemini_api_key
```

* (Optional) Add `.env` in `frontend/` if you use Vite env vars.

### 3. Build and Run with Docker

```bash
docker compose up --build
```

### 4. Open in browser

* Frontend: [http://localhost:3000](http://localhost:3000)
* Backend API: [http://localhost:5000/api](http://localhost:5000/api)

---

## üì¶ Docker Commands

| Command                        | Description                    |
| ------------------------------ | ------------------------------ |
| `docker compose up --build`    | Build and run containers       |
| `docker compose down`          | Stop containers                |
| `docker compose logs -f`       | View container logs            |
| `docker exec -it backend bash` | Access backend container shell |

---

## ‚ú® Features

* Authentication & Role-based access
* Problem listing with tag filtering
* Live code editor with language support (C++, Python, Java)
* Run code with custom input
* Submit against hidden test cases
* Past submission tracking
* Admin pages to manage problems/test cases
* AI-powered feedback using Gemini API

---

## üß† AI Code Review

Powered by [Gemini 2.0 Flash](https://ai.google.dev/). Click **"Review Code"** on the problem page to get instant AI feedback!

---

## üöÄ Deployment (optional)

You can deploy this app using services like:

* Frontend: **Vercel**, **Netlify**, or **Cloudflare Pages**
* Backend: **Render**, **Railway**, or a **VPS** with Docker

---

## üë®‚Äçüîß Maintainers

* Aryan Raj ([@github](https://github.com/your-username))

---

## üìú License

MIT License ‚Äì use freely, improve widely!

````

---

### ‚úÖ Next Step

- Replace `"your-username"` and `"your_jwt_secret"` with your actual values.
- Commit this file:

```bash
git add README.md
git commit -m "Add Docker-based README"
git push origin main
````

